version: "3"
services:
  api_gateway:
    container_name: api_gateway
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    image: api_gateway
    volumes:
    - ".:/app" #only for developement
    - "/app/node_modules"
    networks:
    - gateway
    restart: unless-stopped
    ports:
      - "3001:3000"
  
  game_service:
    container_name: game_service
    env_file: 
    - .env
    - .env.profile-db
    build:
      context: ../game-service
      dockerfile: Dockerfile
    image: game_service
    volumes:
      - "../game-service:/app" #only for developement
      - "/app/node_modules"
    restart: unless-stopped
    networks:
      - gateway
    ports:
      - "3007:3000" #only for testing porposes
    depends_on:
      profile_db_game:
        condition: service_healthy
    
  stats_service:
    container_name: stats_service
    env_file: 
    - .env
    - .env.profile-db
    build:
      context: ../stats-service
      dockerfile: Dockerfile
    image: stats_service
    volumes:
      - "../stats-service:/app" #only for developement
      - "/app/node_modules"
    restart: unless-stopped
    networks:
      - gateway
    ports:
      - "3009:3000" #only for testing porposes
    depends_on:
      profile_db_game:
        condition: service_healthy
  
  user_service:
    container_name: user_service
    env_file: 
    - .env
    - .env.profile-db
    build:
      context: ../user-service
      dockerfile: Dockerfile
    image: user_service
    volumes:
      - "../user-service:/app" #only for developement
      - "/app/node_modules"
    restart: unless-stopped
    networks:
      - gateway
    ports:
      - "3008:3000" #only for testing porposes
    depends_on:
      profile_db_game:
        condition: service_healthy
    
  profile_db_game:
    container_name: profile_db_game
    env_file: 
    - .env
    - .env.profile-db
    build:
      context: ./database
      dockerfile: Dockerfile
    image: postgres
    restart: always
    volumes:
      - "profile_db_game_volume:/var/lib/postgresql"
    networks:
      - gateway
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 3

networks:
  gateway:
    name: gateway

volumes:
  profile_db_game_volume: